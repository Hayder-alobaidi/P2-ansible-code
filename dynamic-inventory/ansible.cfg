# The configuration fileÔÉÅ
#Changes can be made and used in a configuration file 
#which will be searched for in the following order:

# ANSIBLE_CONFIG (environment variable if set)

# ansible.cfg (in the current directory)

# ~/.ansible.cfg (in the home directory)

# /etc/ansible/ansible.cfg

# Ansible will process the above list and use the first file found,
#all others are ignored.

# For above note see this link : https://docs.ansible.com/ansible/latest/reference_appendices/config.html#ansible-configuration-settings-locations


[defaults]

# Specify the path to your inventory file
inventory = /etc/ansible/inventory/aws_ec2.yaml

# Specify the path to the Ansible roles directory
roles_path = /ops/ansible/roles

# Specify the remote user for SSH connections
remote_user = ansible-user

# Specify the path to your private key file for authentication
private_key_file = /home/ansible-user/.ssh/id_rsa

# Disable SSH host key checking (set to False for convenience in dynamic environments)
host_key_checking = False

# Set the SSH connection timeout in seconds
timeout = 60

# Set the number of parallel tasks to run
forks = 10

interpreter_python = /usr/bin/python3.7 # can be remove if not needed

[inventory]
# Enable inventory plugins, including AWS EC2 and others if needed
enable_plugins = aws_ec2, host_list, script, auto, yaml, ini, toml

# Optional: Ignore specific file extensions when parsing inventory directories
ignore_extensions = .pyc, .pyo, .swp, .bak, ~, .rpm, .md, .txt, ~, .orig, .ini, .cfg, .retry

# Optional: Ignore files matching these patterns when parsing inventory directories
# ignore_patterns = *.bak, *.old

# If 'true', unparsed inventory sources become fatal errors. Set this to 'True' if needed.
# unparsed_is_failed = False


[privilege_escalation]
# Enable privilege escalation
become = True
# Set the method for privilege escalation (sudo is common)
become_method = sudo
# Specify the user to become during privilege escalation
become_user = root
# Set this to 'True' if you need to prompt for a password when using become
become_ask_pass = False


[paramiko_connection]
# Do not record new host keys encountered
record_host_keys = False

# Disable pseudo-terminal requests under sudo
pty = False

# Disable looking for SSH keys initially
look_for_keys = False

# Automatically add host keys when using persistent connections
host_key_auto_add = True


[ssh_connection]
# SSH arguments to use for optimal performance
ssh_args = -o ForwardAgent=yes -o ControlMaster=auto -o ControlPersist=60s

# Optional: Base directory for the ControlPath sockets
# control_path_dir = ~/.ansible/cp

# Optional: Path format for the ControlPath sockets
# control_path = %(directory)s/%%h-%%r

# Enable pipelining to reduce the number of SSH operations
pipelining = True

# Mechanism for transferring files
scp_if_ssh = smart

# Override the transfer mechanism if needed
transfer_method = smart

# Optional: SFTP batch mode
# sftp_batch_mode = False

# Optional: TTY allocation for sudo (enable if required by sudoers configuration)
# usetty = True

# Number of times to retry an SSH connection
retries = 3


[persistent_connection]
# Persistent connection timeout value in seconds
connect_timeout = 30

# Command timeout value in seconds
command_timeout = 30


[accelerate]
#accelerate_port = 5099
#accelerate_timeout = 30
#accelerate_connect_timeout = 5.0

# The daemon timeout is measured in minutes. This time is measured
# from the last activity to the accelerate daemon.
#accelerate_daemon_timeout = 30

# If set to yes, accelerate_multi_key will allow multiple
# private keys to be uploaded to it, though each user must
# have access to the system via SSH to add a new key. The default
# is "no".
#accelerate_multi_key = yes

[selinux]
# file systems that require special treatment when dealing with security context
# the default behaviour that copies the existing context or uses the user default
# needs to be changed to use the file system dependent context.
#special_context_filesystems=nfs,vboxsf,fuse,ramfs,9p,vfat

# Set this to yes to allow libvirt_lxc connections to work without SELinux.
#libvirt_lxc_noseclabel = yes

[colors]
#highlight = white
#verbose = blue
#warn = bright purple
#error = red
#debug = dark gray
#deprecate = purple
#skip = cyan
#unreachable = red
#ok = green
#changed = yellow
#diff_add = green
#diff_remove = red
#diff_lines = cyan


[diff]
# Always print diff when running ( same as always running with -D/--diff )
# always = no

# Set how many context lines to show in diff
# context = 3